//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.8.3928.0。
// 
namespace PullData.ConvergenceService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <summary>
    /// 4.2.4.11 户籍人口统计  编号：I010411
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PublicSecurityDepartmentSoap", Namespace="http://tempuri.org/")]
    public partial class PublicSecurityDepartment : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IDCardInfoVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback familyMembersInfoVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback numberOfFamilyMembersVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback relationsWithHouseholdsVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback abnormalDeathsVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback vehicleInformationVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback vehicleQuantityVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback householdRegistrationInformationQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback householdPersonnelInquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback vehicleInformationQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback householdRegistrationStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback drunkDrivingStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback statisticsOfTrafficIllegalDeductionPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback trafficAccidentStatisticsOperationCompleted;
        
        /// <remarks/>
        public PublicSecurityDepartment() {
            this.Url = "http://220.160.52.50:801/ConvergenceSerivce/PublicSecurityDepartment.asmx";
        }
        
        /// <remarks/>
        public event IDCardInfoVerificationCompletedEventHandler IDCardInfoVerificationCompleted;
        
        /// <remarks/>
        public event familyMembersInfoVerificationCompletedEventHandler familyMembersInfoVerificationCompleted;
        
        /// <remarks/>
        public event numberOfFamilyMembersVerificationCompletedEventHandler numberOfFamilyMembersVerificationCompleted;
        
        /// <remarks/>
        public event relationsWithHouseholdsVerificationCompletedEventHandler relationsWithHouseholdsVerificationCompleted;
        
        /// <remarks/>
        public event abnormalDeathsVerificationCompletedEventHandler abnormalDeathsVerificationCompleted;
        
        /// <remarks/>
        public event vehicleInformationVerificationCompletedEventHandler vehicleInformationVerificationCompleted;
        
        /// <remarks/>
        public event vehicleQuantityVerificationCompletedEventHandler vehicleQuantityVerificationCompleted;
        
        /// <remarks/>
        public event householdRegistrationInformationQueryCompletedEventHandler householdRegistrationInformationQueryCompleted;
        
        /// <remarks/>
        public event householdPersonnelInquiryCompletedEventHandler householdPersonnelInquiryCompleted;
        
        /// <remarks/>
        public event vehicleInformationQueryCompletedEventHandler vehicleInformationQueryCompleted;
        
        /// <remarks/>
        public event householdRegistrationStatisticsCompletedEventHandler householdRegistrationStatisticsCompleted;
        
        /// <remarks/>
        public event drunkDrivingStatisticsCompletedEventHandler drunkDrivingStatisticsCompleted;
        
        /// <remarks/>
        public event statisticsOfTrafficIllegalDeductionPointsCompletedEventHandler statisticsOfTrafficIllegalDeductionPointsCompleted;
        
        /// <remarks/>
        public event trafficAccidentStatisticsCompletedEventHandler trafficAccidentStatisticsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDCardInfoVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IDCardInfoVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_XB, string BHCR_CSRQ, string BHCR_MZ, string BHCR_YXQS, string BHCR_YXQZ) {
            object[] results = this.Invoke("IDCardInfoVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_XB,
                        BHCR_CSRQ,
                        BHCR_MZ,
                        BHCR_YXQS,
                        BHCR_YXQZ});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIDCardInfoVerification(
                    string guid, 
                    string senderID, 
                    string userName, 
                    string userIDCard, 
                    string queryCause, 
                    string reqIp, 
                    string QQF_MAC, 
                    string BHCR_XM, 
                    string BHCR_SFZH, 
                    string BHCR_XB, 
                    string BHCR_CSRQ, 
                    string BHCR_MZ, 
                    string BHCR_YXQS, 
                    string BHCR_YXQZ, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("IDCardInfoVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_XB,
                        BHCR_CSRQ,
                        BHCR_MZ,
                        BHCR_YXQS,
                        BHCR_YXQZ}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndIDCardInfoVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IDCardInfoVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_XB, string BHCR_CSRQ, string BHCR_MZ, string BHCR_YXQS, string BHCR_YXQZ) {
            this.IDCardInfoVerificationAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, BHCR_XB, BHCR_CSRQ, BHCR_MZ, BHCR_YXQS, BHCR_YXQZ, null);
        }
        
        /// <remarks/>
        public void IDCardInfoVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_XB, string BHCR_CSRQ, string BHCR_MZ, string BHCR_YXQS, string BHCR_YXQZ, object userState) {
            if ((this.IDCardInfoVerificationOperationCompleted == null)) {
                this.IDCardInfoVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDCardInfoVerificationOperationCompleted);
            }
            this.InvokeAsync("IDCardInfoVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_XB,
                        BHCR_CSRQ,
                        BHCR_MZ,
                        BHCR_YXQS,
                        BHCR_YXQZ}, this.IDCardInfoVerificationOperationCompleted, userState);
        }
        
        private void OnIDCardInfoVerificationOperationCompleted(object arg) {
            if ((this.IDCardInfoVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDCardInfoVerificationCompleted(this, new IDCardInfoVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/familyMembersInfoVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string familyMembersInfoVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM_1, string BHCR_SFZH_1, string BHCR_XM_2, string BHCR_SFZH_2) {
            object[] results = this.Invoke("familyMembersInfoVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM_1,
                        BHCR_SFZH_1,
                        BHCR_XM_2,
                        BHCR_SFZH_2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfamilyMembersInfoVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM_1, string BHCR_SFZH_1, string BHCR_XM_2, string BHCR_SFZH_2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("familyMembersInfoVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM_1,
                        BHCR_SFZH_1,
                        BHCR_XM_2,
                        BHCR_SFZH_2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndfamilyMembersInfoVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void familyMembersInfoVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM_1, string BHCR_SFZH_1, string BHCR_XM_2, string BHCR_SFZH_2) {
            this.familyMembersInfoVerificationAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM_1, BHCR_SFZH_1, BHCR_XM_2, BHCR_SFZH_2, null);
        }
        
        /// <remarks/>
        public void familyMembersInfoVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM_1, string BHCR_SFZH_1, string BHCR_XM_2, string BHCR_SFZH_2, object userState) {
            if ((this.familyMembersInfoVerificationOperationCompleted == null)) {
                this.familyMembersInfoVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfamilyMembersInfoVerificationOperationCompleted);
            }
            this.InvokeAsync("familyMembersInfoVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM_1,
                        BHCR_SFZH_1,
                        BHCR_XM_2,
                        BHCR_SFZH_2}, this.familyMembersInfoVerificationOperationCompleted, userState);
        }
        
        private void OnfamilyMembersInfoVerificationOperationCompleted(object arg) {
            if ((this.familyMembersInfoVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.familyMembersInfoVerificationCompleted(this, new familyMembersInfoVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/numberOfFamilyMembersVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string numberOfFamilyMembersVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_THRYS) {
            object[] results = this.Invoke("numberOfFamilyMembersVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_THRYS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginnumberOfFamilyMembersVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_THRYS, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("numberOfFamilyMembersVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_THRYS}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndnumberOfFamilyMembersVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void numberOfFamilyMembersVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_THRYS) {
            this.numberOfFamilyMembersVerificationAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, BHCR_THRYS, null);
        }
        
        /// <remarks/>
        public void numberOfFamilyMembersVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_THRYS, object userState) {
            if ((this.numberOfFamilyMembersVerificationOperationCompleted == null)) {
                this.numberOfFamilyMembersVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnumberOfFamilyMembersVerificationOperationCompleted);
            }
            this.InvokeAsync("numberOfFamilyMembersVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_THRYS}, this.numberOfFamilyMembersVerificationOperationCompleted, userState);
        }
        
        private void OnnumberOfFamilyMembersVerificationOperationCompleted(object arg) {
            if ((this.numberOfFamilyMembersVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.numberOfFamilyMembersVerificationCompleted(this, new numberOfFamilyMembersVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/relationsWithHouseholdsVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string relationsWithHouseholdsVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_XM_HZ, string BHCR_SFZH_HZ, string BHCR_GX) {
            object[] results = this.Invoke("relationsWithHouseholdsVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_XM_HZ,
                        BHCR_SFZH_HZ,
                        BHCR_GX});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrelationsWithHouseholdsVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_XM_HZ, string BHCR_SFZH_HZ, string BHCR_GX, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("relationsWithHouseholdsVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_XM_HZ,
                        BHCR_SFZH_HZ,
                        BHCR_GX}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndrelationsWithHouseholdsVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void relationsWithHouseholdsVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_XM_HZ, string BHCR_SFZH_HZ, string BHCR_GX) {
            this.relationsWithHouseholdsVerificationAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, BHCR_XM_HZ, BHCR_SFZH_HZ, BHCR_GX, null);
        }
        
        /// <remarks/>
        public void relationsWithHouseholdsVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCR_XM_HZ, string BHCR_SFZH_HZ, string BHCR_GX, object userState) {
            if ((this.relationsWithHouseholdsVerificationOperationCompleted == null)) {
                this.relationsWithHouseholdsVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelationsWithHouseholdsVerificationOperationCompleted);
            }
            this.InvokeAsync("relationsWithHouseholdsVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCR_XM_HZ,
                        BHCR_SFZH_HZ,
                        BHCR_GX}, this.relationsWithHouseholdsVerificationOperationCompleted, userState);
        }
        
        private void OnrelationsWithHouseholdsVerificationOperationCompleted(object arg) {
            if ((this.relationsWithHouseholdsVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relationsWithHouseholdsVerificationCompleted(this, new relationsWithHouseholdsVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/abnormalDeathsVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string abnormalDeathsVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH) {
            object[] results = this.Invoke("abnormalDeathsVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginabnormalDeathsVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("abnormalDeathsVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndabnormalDeathsVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void abnormalDeathsVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH) {
            this.abnormalDeathsVerificationAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, null);
        }
        
        /// <remarks/>
        public void abnormalDeathsVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, object userState) {
            if ((this.abnormalDeathsVerificationOperationCompleted == null)) {
                this.abnormalDeathsVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabnormalDeathsVerificationOperationCompleted);
            }
            this.InvokeAsync("abnormalDeathsVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH}, this.abnormalDeathsVerificationOperationCompleted, userState);
        }
        
        private void OnabnormalDeathsVerificationOperationCompleted(object arg) {
            if ((this.abnormalDeathsVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abnormalDeathsVerificationCompleted(this, new abnormalDeathsVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vehicleInformationVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string vehicleInformationVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL) {
            object[] results = this.Invoke("vehicleInformationVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_HP,
                        BHCC_HPZL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvehicleInformationVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vehicleInformationVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_HP,
                        BHCC_HPZL}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvehicleInformationVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void vehicleInformationVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL) {
            this.vehicleInformationVerificationAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, BHCC_HP, BHCC_HPZL, null);
        }
        
        /// <remarks/>
        public void vehicleInformationVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL, object userState) {
            if ((this.vehicleInformationVerificationOperationCompleted == null)) {
                this.vehicleInformationVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvehicleInformationVerificationOperationCompleted);
            }
            this.InvokeAsync("vehicleInformationVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_HP,
                        BHCC_HPZL}, this.vehicleInformationVerificationOperationCompleted, userState);
        }
        
        private void OnvehicleInformationVerificationOperationCompleted(object arg) {
            if ((this.vehicleInformationVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vehicleInformationVerificationCompleted(this, new vehicleInformationVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vehicleQuantityVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string vehicleQuantityVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_SL) {
            object[] results = this.Invoke("vehicleQuantityVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_SL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvehicleQuantityVerification(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_SL, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vehicleQuantityVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_SL}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvehicleQuantityVerification(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void vehicleQuantityVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_SL) {
            this.vehicleQuantityVerificationAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, BHCC_SL, null);
        }
        
        /// <remarks/>
        public void vehicleQuantityVerificationAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_SL, object userState) {
            if ((this.vehicleQuantityVerificationOperationCompleted == null)) {
                this.vehicleQuantityVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvehicleQuantityVerificationOperationCompleted);
            }
            this.InvokeAsync("vehicleQuantityVerification", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_SL}, this.vehicleQuantityVerificationOperationCompleted, userState);
        }
        
        private void OnvehicleQuantityVerificationOperationCompleted(object arg) {
            if ((this.vehicleQuantityVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vehicleQuantityVerificationCompleted(this, new vehicleQuantityVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/householdRegistrationInformationQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string householdRegistrationInformationQuery(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH) {
            object[] results = this.Invoke("householdRegistrationInformationQuery", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginhouseholdRegistrationInformationQuery(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("householdRegistrationInformationQuery", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndhouseholdRegistrationInformationQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void householdRegistrationInformationQueryAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH) {
            this.householdRegistrationInformationQueryAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, null);
        }
        
        /// <remarks/>
        public void householdRegistrationInformationQueryAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, object userState) {
            if ((this.householdRegistrationInformationQueryOperationCompleted == null)) {
                this.householdRegistrationInformationQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhouseholdRegistrationInformationQueryOperationCompleted);
            }
            this.InvokeAsync("householdRegistrationInformationQuery", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH}, this.householdRegistrationInformationQueryOperationCompleted, userState);
        }
        
        private void OnhouseholdRegistrationInformationQueryOperationCompleted(object arg) {
            if ((this.householdRegistrationInformationQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.householdRegistrationInformationQueryCompleted(this, new householdRegistrationInformationQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/householdPersonnelInquiry", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string householdPersonnelInquiry(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH) {
            object[] results = this.Invoke("householdPersonnelInquiry", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginhouseholdPersonnelInquiry(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("householdPersonnelInquiry", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndhouseholdPersonnelInquiry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void householdPersonnelInquiryAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH) {
            this.householdPersonnelInquiryAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, null);
        }
        
        /// <remarks/>
        public void householdPersonnelInquiryAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, object userState) {
            if ((this.householdPersonnelInquiryOperationCompleted == null)) {
                this.householdPersonnelInquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhouseholdPersonnelInquiryOperationCompleted);
            }
            this.InvokeAsync("householdPersonnelInquiry", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH}, this.householdPersonnelInquiryOperationCompleted, userState);
        }
        
        private void OnhouseholdPersonnelInquiryOperationCompleted(object arg) {
            if ((this.householdPersonnelInquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.householdPersonnelInquiryCompleted(this, new householdPersonnelInquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vehicleInformationQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string vehicleInformationQuery(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL) {
            object[] results = this.Invoke("vehicleInformationQuery", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_HP,
                        BHCC_HPZL});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvehicleInformationQuery(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vehicleInformationQuery", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_HP,
                        BHCC_HPZL}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvehicleInformationQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void vehicleInformationQueryAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL) {
            this.vehicleInformationQueryAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, BHCR_XM, BHCR_SFZH, BHCC_HP, BHCC_HPZL, null);
        }
        
        /// <remarks/>
        public void vehicleInformationQueryAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string BHCR_XM, string BHCR_SFZH, string BHCC_HP, string BHCC_HPZL, object userState) {
            if ((this.vehicleInformationQueryOperationCompleted == null)) {
                this.vehicleInformationQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvehicleInformationQueryOperationCompleted);
            }
            this.InvokeAsync("vehicleInformationQuery", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        BHCR_XM,
                        BHCR_SFZH,
                        BHCC_HP,
                        BHCC_HPZL}, this.vehicleInformationQueryOperationCompleted, userState);
        }
        
        private void OnvehicleInformationQueryOperationCompleted(object arg) {
            if ((this.vehicleInformationQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.vehicleInformationQueryCompleted(this, new vehicleInformationQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/householdRegistrationStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string householdRegistrationStatistics(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            object[] results = this.Invoke("householdRegistrationStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginhouseholdRegistrationStatistics(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("householdRegistrationStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndhouseholdRegistrationStatistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void householdRegistrationStatisticsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            this.householdRegistrationStatisticsAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, TJ_YYYYMM, TJ_XQDM, null);
        }
        
        /// <remarks/>
        public void householdRegistrationStatisticsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, object userState) {
            if ((this.householdRegistrationStatisticsOperationCompleted == null)) {
                this.householdRegistrationStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhouseholdRegistrationStatisticsOperationCompleted);
            }
            this.InvokeAsync("householdRegistrationStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, this.householdRegistrationStatisticsOperationCompleted, userState);
        }
        
        private void OnhouseholdRegistrationStatisticsOperationCompleted(object arg) {
            if ((this.householdRegistrationStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.householdRegistrationStatisticsCompleted(this, new householdRegistrationStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/drunkDrivingStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string drunkDrivingStatistics(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            object[] results = this.Invoke("drunkDrivingStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindrunkDrivingStatistics(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("drunkDrivingStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnddrunkDrivingStatistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void drunkDrivingStatisticsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            this.drunkDrivingStatisticsAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, TJ_YYYYMM, TJ_XQDM, null);
        }
        
        /// <remarks/>
        public void drunkDrivingStatisticsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, object userState) {
            if ((this.drunkDrivingStatisticsOperationCompleted == null)) {
                this.drunkDrivingStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndrunkDrivingStatisticsOperationCompleted);
            }
            this.InvokeAsync("drunkDrivingStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, this.drunkDrivingStatisticsOperationCompleted, userState);
        }
        
        private void OndrunkDrivingStatisticsOperationCompleted(object arg) {
            if ((this.drunkDrivingStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.drunkDrivingStatisticsCompleted(this, new drunkDrivingStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/statisticsOfTrafficIllegalDeductionPoints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string statisticsOfTrafficIllegalDeductionPoints(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            object[] results = this.Invoke("statisticsOfTrafficIllegalDeductionPoints", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstatisticsOfTrafficIllegalDeductionPoints(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("statisticsOfTrafficIllegalDeductionPoints", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndstatisticsOfTrafficIllegalDeductionPoints(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void statisticsOfTrafficIllegalDeductionPointsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            this.statisticsOfTrafficIllegalDeductionPointsAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, TJ_YYYYMM, TJ_XQDM, null);
        }
        
        /// <remarks/>
        public void statisticsOfTrafficIllegalDeductionPointsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, object userState) {
            if ((this.statisticsOfTrafficIllegalDeductionPointsOperationCompleted == null)) {
                this.statisticsOfTrafficIllegalDeductionPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstatisticsOfTrafficIllegalDeductionPointsOperationCompleted);
            }
            this.InvokeAsync("statisticsOfTrafficIllegalDeductionPoints", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, this.statisticsOfTrafficIllegalDeductionPointsOperationCompleted, userState);
        }
        
        private void OnstatisticsOfTrafficIllegalDeductionPointsOperationCompleted(object arg) {
            if ((this.statisticsOfTrafficIllegalDeductionPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.statisticsOfTrafficIllegalDeductionPointsCompleted(this, new statisticsOfTrafficIllegalDeductionPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/trafficAccidentStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string trafficAccidentStatistics(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            object[] results = this.Invoke("trafficAccidentStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegintrafficAccidentStatistics(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("trafficAccidentStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndtrafficAccidentStatistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void trafficAccidentStatisticsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM) {
            this.trafficAccidentStatisticsAsync(guid, senderID, userName, userIDCard, queryCause, reqIp, QQF_MAC, TJ_YYYYMM, TJ_XQDM, null);
        }
        
        /// <remarks/>
        public void trafficAccidentStatisticsAsync(string guid, string senderID, string userName, string userIDCard, string queryCause, string reqIp, string QQF_MAC, string TJ_YYYYMM, string TJ_XQDM, object userState) {
            if ((this.trafficAccidentStatisticsOperationCompleted == null)) {
                this.trafficAccidentStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OntrafficAccidentStatisticsOperationCompleted);
            }
            this.InvokeAsync("trafficAccidentStatistics", new object[] {
                        guid,
                        senderID,
                        userName,
                        userIDCard,
                        queryCause,
                        reqIp,
                        QQF_MAC,
                        TJ_YYYYMM,
                        TJ_XQDM}, this.trafficAccidentStatisticsOperationCompleted, userState);
        }
        
        private void OntrafficAccidentStatisticsOperationCompleted(object arg) {
            if ((this.trafficAccidentStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.trafficAccidentStatisticsCompleted(this, new trafficAccidentStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void IDCardInfoVerificationCompletedEventHandler(object sender, IDCardInfoVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDCardInfoVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IDCardInfoVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void familyMembersInfoVerificationCompletedEventHandler(object sender, familyMembersInfoVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class familyMembersInfoVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal familyMembersInfoVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void numberOfFamilyMembersVerificationCompletedEventHandler(object sender, numberOfFamilyMembersVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class numberOfFamilyMembersVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal numberOfFamilyMembersVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void relationsWithHouseholdsVerificationCompletedEventHandler(object sender, relationsWithHouseholdsVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class relationsWithHouseholdsVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal relationsWithHouseholdsVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void abnormalDeathsVerificationCompletedEventHandler(object sender, abnormalDeathsVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class abnormalDeathsVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal abnormalDeathsVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void vehicleInformationVerificationCompletedEventHandler(object sender, vehicleInformationVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vehicleInformationVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vehicleInformationVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void vehicleQuantityVerificationCompletedEventHandler(object sender, vehicleQuantityVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vehicleQuantityVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vehicleQuantityVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void householdRegistrationInformationQueryCompletedEventHandler(object sender, householdRegistrationInformationQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class householdRegistrationInformationQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal householdRegistrationInformationQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void householdPersonnelInquiryCompletedEventHandler(object sender, householdPersonnelInquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class householdPersonnelInquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal householdPersonnelInquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void vehicleInformationQueryCompletedEventHandler(object sender, vehicleInformationQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class vehicleInformationQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal vehicleInformationQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void householdRegistrationStatisticsCompletedEventHandler(object sender, householdRegistrationStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class householdRegistrationStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal householdRegistrationStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void drunkDrivingStatisticsCompletedEventHandler(object sender, drunkDrivingStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class drunkDrivingStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal drunkDrivingStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void statisticsOfTrafficIllegalDeductionPointsCompletedEventHandler(object sender, statisticsOfTrafficIllegalDeductionPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class statisticsOfTrafficIllegalDeductionPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal statisticsOfTrafficIllegalDeductionPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void trafficAccidentStatisticsCompletedEventHandler(object sender, trafficAccidentStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class trafficAccidentStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal trafficAccidentStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
